// Generated by CoffeeScript 1.6.1
(function() {
  var consts, pkg, window;

  pkg = this.pkg || {};

  consts = this.consts;

  window = this;

  pkg.Kraken = (function() {

    Kraken.prototype._canvas = null;

    Kraken.prototype._context = null;

    Kraken.prototype._$canvas = null;

    Kraken.prototype._$canvasDebug = null;

    Kraken.prototype._world = null;

    Kraken.prototype._me = null;

    Kraken.prototype._dudes = {};

    Kraken.prototype._socket = null;

    Kraken.prototype._forDestruction = [];

    Kraken.prototype._playerUpdates = [];

    function Kraken() {
      this._onConnect();
    }

    Kraken.prototype._onConnect = function() {
      this._buildWorld();
      return this._world = new pkg.KrakenWorld();
    };

    Kraken.prototype._buildWorld = function() {
      if ($("#krack-world-container").length > 0) {
        $("<canvas></canvas>").attr({
          id: "krack-world",
          width: $(window).width(),
          height: $(window).height()
        }).appendTo("#krack-world-container");
        $("<canvas></canvas>").attr({
          id: "krack-world-debug",
          width: $(window).width(),
          height: $(window).height()
        }).appendTo("#krack-world-container");
        this._$canvas = $("#krack-world");
        this._$debugCanvas = $("#krack-world-debug");
        consts.canvas = document.getElementById("krack-world");
        consts.context = consts.canvas.getContext("2d");
        consts.debugCanvas = document.getElementById("krack-world-debug");
        consts.debugContext = consts.debugCanvas.getContext("2d");
        consts.$canvasContainer = $("#krack-world-container");
        return this._setupWorldContainers();
        /*
        			#@TODO setup easeljs stuff
        			#Kraken.stage = new createjs.Stage(Kraken.canvas);
        			#createjs.Ticker.setFPS(30);
        			#createjs.Ticker.useRAF = true;
        
        			#@TODO use this to setup stage mouse position
        			Kraken.debugCanvas.addEventListener('mousemove', function(evt) {
        		        var rect = Kraken.canvas.getBoundingClientRect();
        		        Kraken.mouseX = evt.clientX - rect.left;
        				Kraken.mouseY = evt.clientY - rect.top;
        		      }, false);
         			
         			setupWorldContainers();
         			
         			Kraken.canvas.addEventListener("mousemove",function(e){
         				var rect = Kraken.canvas.getBoundingClientRect();
        				console.log(rect);
        				Kraken.mouseX = e.clientX - rect.left;
        				Kraken.mouseY = e.clientY - rect.top;
         			}, false);
        */

      }
    };

    Kraken.prototype._setupWorldContainers = function() {
      /*
      		function setupWorldContainers(){
      		Kraken.foregroundContainer = new createjs.Container();
      		Kraken.playerContainer = new createjs.Container();
      		Kraken.backgroundContainer = new createjs.Container();
      		Kraken.middleBackgroundContainer = new createjs.Container();
      		Kraken.farBackgroundContainer = new createjs.Container();
      		
      		Kraken.stage.addChild(Kraken.farBackgroundContainer);
      		Kraken.stage.addChild(Kraken.backgroundContainer);
      		Kraken.stage.addChild(Kraken.middleBackgroundContainer);
      		Kraken.stage.addChild(Kraken.playerContainer);
      		Kraken.stage.addChild(Kraken.foregroundContainer);
      		
      		console.log(Kraken.stage);
      		
      		var boatfg = new createjs.Bitmap("/core/images/boat/full.png");
      		var boatbg = new createjs.Bitmap("/core/images/boat/full.png");
      		var bg = new createjs.Bitmap("/core/images/background_8bit.png");
      		
      		var wave = new createjs.Bitmap("/core/images/waves.png");
      		Kraken.backgroundContainer.addChild(wave);
      		#
      		for (var x = 0; x < Kraken.worldWidth; x+=150){
      			for ( var y = 0; y < Kraken.worldHeight; y+=100){
      				var wave = new createjs.BitmapAnimation(new createjs.SpriteSheet(waveJson));
      				wave.x = x;
      				wave.y = y;
      				Kraken.middleBackgroundContainer.addChild(wave);
      			}
      		}
      		#
      		
      		
      		
      		boatbg.y = 500;
      		boatfg.y = 520;
      		Kraken.foregroundContainer.addChild(boatfg);
      		
      		Kraken.farBackgroundContainer.addChild(bg);
      		
      		//Kraken.backgroundContainer.addChild(boatbg);
      		
      	};
      */

    };

    return Kraken;

  })();

  this.onload = function() {
    var Kraken;
    return Kraken = new pkg.Kraken;
  };

}).call(this);

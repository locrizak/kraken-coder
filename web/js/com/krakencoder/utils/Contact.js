// Generated by CoffeeScript 1.6.1
(function() {
  var consts, pkg, w;

  pkg = this.pkg || {};

  consts = this.consts;

  w = this;

  pkg.utils.Contact = (function() {
    var _getIfContactIsRegistered, _listeners;

    function Contact() {}

    _listeners = {
      BeginContact: [],
      EndContact: [],
      PostSolve: [],
      PreSolve: []
    };

    Contact.init = function() {
      w.listener.BeginContact = Contact._onBeginContact;
      w.listener.EndContact = Contact._onEndContact;
      w.listener.PostSolve = Contact._onPostSolve;
      return w.listener.PreSolve = Contact._onPreSolve;
    };

    Contact.registerContact = function(type, fixtureA, fixtureB, callback) {
      if (fixtureB == null) {
        fixtureB = "";
      }
      if (_listeners.hasOwnProperty(type)) {
        return _listeners[type].push({
          fixtureA: fixtureA,
          fixtureB: fixtureB,
          callback: callback
        });
      }
    };

    Contact._onBeginContact = function(contact) {
      var obj, _i, _len, _ref;
      if (_listeners.BeginContact.length > 0) {
        _ref = _listeners.BeginContact;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          obj = _ref[_i];
          if (_getIfContactIsRegistered(contact.m_fixtureA.GetUserData(), contact.m_fixtureB.GetUserData(), obj) && typeof obj.callback === "function") {
            obj.callback();
          }
        }
      }
      return this;
    };

    Contact._onEndContact = function(contact) {
      var obj, _i, _len, _ref;
      if (_listeners.EndContact.length > 0) {
        _ref = _listeners.EndContact;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          obj = _ref[_i];
          if (_getIfContactIsRegistered(contact.m_fixtureA.GetUserData(), contact.m_fixtureB.GetUserData(), obj) && typeof obj.callback === "function") {
            obj.callback();
          }
        }
      }
      return this;
    };

    Contact._onPostSolve = function(contact) {
      return this;
    };

    Contact._onPreSolve = function(contact) {
      var obj, _i, _len, _ref;
      if (_listeners.PreSolve.length > 0) {
        _ref = _listeners.PreSolve;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          obj = _ref[_i];
          if (_getIfContactIsRegistered(contact.m_fixtureA.GetUserData(), contact.m_fixtureB.GetUserData(), obj) && typeof obj.callback === "function") {
            obj.callback();
          }
        }
      }
      return this;
    };

    _getIfContactIsRegistered = function(a, b, val) {
      if (a === "" || b === "") {
        if (a === val.fixtureA || a === val.fixtureB || b === val.fixtureA || b === val.fixtureB) {
          return true;
        }
      } else {
        if ((a === val.fixtureA || a === val.fixtureB) && (b === val.fixtureA || b === val.fixtureB)) {
          return true;
        }
      }
      return false;
    };

    return Contact;

  })();

}).call(this);
